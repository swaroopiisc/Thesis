function [H_f,cir_bs1,Rx_power] = Channel_data_calc(bs1,f)
% # <number of receiver points>
% # <receiver point number> <number of paths for this point>
% # <path number> <phase value(deg)> <mean time of arrival(0.1 micro sec)> <received power(dBm)>
% cir_bs1 = zeros(26,4,bs1(1,1)); %pre init for faster proc
row_idx = 1+1; 
% first line contains total number of receiver points
N_rx_pts = bs1(1,1); % Number of receiver points in the simulation
PDP = zeros(25,2,100);
for i = 1:N_rx_pts
    size_set = size(bs1(row_idx:row_idx+bs1(row_idx,2),:));
    cir_bs1(1:size_set(1),:) = bs1(row_idx:row_idx+bs1(row_idx,2),:);
    row_idx = row_idx+bs1(row_idx,2)+1;

    n_paths = cir_bs1(1,2);
    power_dbm = cir_bs1(2:end,4);
    power = 0.001.*10.^(power_dbm./10);
    Rx_power(1:n_paths,i) = power;
    amp = sqrt(power);
    
    phase_deg = cir_bs1(2:n_paths+1,2);
    phase = phase_deg.*pi/180;
    delay = cir_bs1(2:n_paths+1,3);
    
    h_t = amp.*exp(1j.*(phase));

    for j = 1:length(f)
        H_f(i,j) = sum(h_t.*exp(-1j.*2.*pi.*f(j).*(delay)));
    end
    cir_bs1 = [];
end

end
